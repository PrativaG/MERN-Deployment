{"version":3,"sources":["components/Logoutbutton.js","views/PirateCrew.js","views/ShowPirate.js","views/AddPirate.js","views/RegistrationForm.js","views/Login.js","App.js","serviceWorker.js","index.js"],"names":["LogoutButton","onClick","event","axios","delete","withCredentials","then","navigate","catch","console","log","PirateCrew","useState","pirates","setPirates","useEffect","get","res","data","length","sort","a","b","pirateA","name","toUpperCase","pirateB","comparison","map","pirate","key","_id","src","imageUrl","alt","width","id","newList","filter","pl","ShowPirate","setPirate","handleClick","target","value","put","err","catchPhrase","position","treasures","pegLeg","style","backgroundColor","eyePatch","hookHand","AddPirate","errors","setErrors","captain","setCaptain","allPirates","i","changeHandler","undefined","error","color","onSubmit","preventDefault","post","newErrors","innerErrors","response","push","message","type","onChange","Registrationform","firstName","lastName","email","password","confirmPassword","formState","setFormState","passwordMatch","frontendErrors","setFrontendErrors","handleChange","newError","Object","keys","index","Login","setEmail","setPassword","setError","e","App","className","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7635995.chunk.js","sourcesContent":["import React from 'react';\r\nimport {navigate} from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nexport default function LogoutButton (){\r\n    const handleClick = event =>{\r\n        axios.delete('http://localhost:8000/api/users/logout', {withCredentials : true})\r\n            .then(()=> navigate('/'))\r\n            .catch(console.log)\r\n    }\r\n    return (\r\n        <button onClick = {handleClick}>\r\n            Log Out\r\n        </button>\r\n    )\r\n    \r\n}","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate} from '@reach/router';\r\nimport LogoutButton from '../components/Logoutbutton';\r\n\r\nconst PirateCrew = () => {\r\n    const [pirates, setPirates] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pirates\", {withCredentials: true})\r\n             .then(res => {\r\n                 setPirates(res.data);\r\n                 \r\n                })\r\n            .catch(() => navigate('/'));\r\n    }, [pirates]);\r\n\r\n    const handleDelete = (event, id) =>{\r\n        axios.delete(\"http://localhost:8000/api/pirates/delete/\" +id)\r\n        .then(() => {\r\n            const newList = pirates.filter(pl => pl._id !== id);\r\n            setPirates(newList);\r\n        })\r\n    };\r\n\r\n    const showProfile = (event, id) => {\r\n        navigate(\"/pirate/\" +id)    \r\n    }\r\n\r\n    function compare(a, b) {\r\n        const  pirateA = a.name.toUpperCase();\r\n        const pirateB  = b.name.toUpperCase();\r\n      \r\n        let comparison = 0;\r\n        if (pirateA > pirateB) {\r\n            comparison = 1;\r\n        } else if (pirateA < pirateB) {\r\n          comparison = -1;\r\n        }\r\n        return comparison;\r\n      }\r\n\r\n    return (\r\n       <div>\r\n            <h1>Pirate Crew</h1> {\" \"}\r\n            <button onClick={()=> navigate(\"/pirate/new\")}>Add Pirate</button>\r\n            <br/>\r\n            <br/>\r\n            <LogoutButton/>\r\n            <br/>\r\n            <br/>\r\n        <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Pic</th>\r\n                        <th>Pirate Name</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {pirates.length !== 0 \r\n                    ? pirates.sort(compare).map( pirate =>(\r\n                       <tr key={pirate._id}>\r\n                           <td> <img src={pirate.imageUrl} alt={pirate.name} width=\"200\"/></td>\r\n                           <td>{pirate.name}</td>\r\n                           <td>\r\n                               <button \r\n                               onClick={(event) => showProfile(event, pirate._id)}\r\n                               >View Profile</button>\r\n                                <button \r\n                               onClick={(event) => handleDelete(event, pirate._id)}\r\n                               >Walk the Plank</button>\r\n                            </td>\r\n                       </tr>\r\n                      ))\r\n                    :<tr> \r\n                        <td>Please add pirates</td>\r\n                    </tr>    \r\n                    }\r\n                </tbody>\r\n            </table>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PirateCrew;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate} from '@reach/router';\r\n\r\n\r\nconst ShowPirate = ({id}) => {\r\n    const [pirate, setPirate] = useState(null);\r\n   \r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pirates/\" + id,  {withCredentials: true})\r\n            .then(res => {\r\n                setPirate(res.data);\r\n            })\r\n            .catch(console.log);\r\n    }, []);\r\n\r\n    const handleClick = (event) => {\r\n        const {name, value} = event.target;\r\n        setPirate({\r\n            ...pirate,\r\n            [name] : value\r\n        })\r\n        \r\n        axios.put(\"http://localhost:8000/api/pirates/edit/\" + pirate._id, pirate, {withCredentials: true})\r\n             .then(res => {\r\n                 console.log(res)\r\n             })\r\n             .catch(err => console.log(err))\r\n    }\r\n\r\n    if(pirate === null) {return \"Loading...\"}\r\n\r\n    return (\r\n    <div>\r\n        <button onClick={()=> navigate(\"/pirates\")}>Crew Board</button>\r\n        <h1>{pirate.name}</h1>\r\n        <img src={pirate.imageUrl} alt={pirate.name} width=\"300\"/>\r\n        <h2>\" {pirate.catchPhrase}  \"</h2>\r\n\r\n        <br/>\r\n        <h3>About</h3>\r\n        <p>Position: {pirate.position} </p>\r\n        <p>Treasures: {pirate.treasures} </p>\r\n         {pirate.pegLeg === \"true\" \r\n         ? \r\n        <>\r\n         <p>Peg Leg: Yes</p> \r\n         <button \r\n         style = {{backgroundColor :'red'}}\r\n         name=\"pegLeg\"\r\n         value = \"false\"\r\n         onClick = {handleClick}>No</button>\r\n        </>\r\n         :\r\n         <>\r\n         <p>Peg Leg: No</p>\r\n         <button \r\n         style = {{backgroundColor :'green'}}\r\n         name=\"pegLeg\"\r\n         value = \"true\"\r\n         onClick = {handleClick}>Yes</button> \r\n         </>\r\n         } \r\n\r\n        {pirate.eyePatch === \"true\" \r\n        ? \r\n       <>\r\n        <p>Eye Patch: Yes</p>\r\n        <button \r\n        name=\"eyePatch\"\r\n        value=\"false\"\r\n        style = {{backgroundColor :'red'}}  \r\n        onClick = {handleClick}>No</button> \r\n        </>\r\n        :\r\n        <>\r\n         <p> Eye Patch: No </p> \r\n         <button \r\n         name=\"eyePatch\"\r\n         value=\"true\" \r\n         onClick = {handleClick}\r\n         style = {{backgroundColor :'green'}}>Yes</button> \r\n        </>}\r\n       {pirate.hookHand === \"true\" \r\n       ?   \r\n       <>\r\n       <p>Hook Hand: Yes </p> \r\n       <button\r\n       name=\"hookHand\"\r\n       value=\"false\"  \r\n        onClick = {handleClick}\r\n       style = {{backgroundColor :'red'}}\r\n       >\r\n        No</button> \r\n        </>\r\n       : \r\n       <>\r\n       <p>Hook Hand: No </p>  \r\n       <button \r\n        name=\"hookHand\"\r\n        value=\"true\"  \r\n         onClick = {handleClick}\r\n       style = {{backgroundColor :'green'}}>Yes</button>\r\n       </> }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ShowPirate;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\n\r\n\r\nconst AddPirate = () =>{\r\n    const [pirate, setPirate] = useState(null);\r\n    const [errors, setErrors] = useState([]);\r\n    const [captain, setCaptain] = useState(\"no\");\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pirates\", {withCredentials: true})\r\n             .then(res => {\r\n                let allPirates = res.data;\r\n                for(let i=0; i<allPirates.length; i++){\r\n                    if(allPirates[i].position === \"Captain\"){\r\n                        setCaptain(\"yes\");\r\n                    }\r\n                }\r\n                })\r\n            .catch(() => navigate('/'));\r\n    }, []);\r\n\r\n    \r\n    const submitHandler = event => {\r\n        event.preventDefault();\r\n        setErrors([]);\r\n        axios.post(\"http://localhost:8000/api/pirates\", pirate, {withCredentials: true})\r\n             .then(() => navigate(\"/pirates\"))\r\n             .catch(err => {\r\n                 const newErrors = [];\r\n                 const innerErrors = err.response.data.errors;\r\n                  console.log(innerErrors);\r\n                 for(const key in innerErrors){\r\n                     newErrors.push(innerErrors[key].message);\r\n                 }\r\n                 setErrors(newErrors);\r\n             });\r\n    }\r\n     \r\n    const changeHandler = event =>{\r\n        let {name, value} = event.target;\r\n        setPirate({\r\n            ...pirate,\r\n            [name] :value\r\n        })\r\n    }\r\n\r\n    if(errors === undefined){return \"Loading...\"}\r\n    return(\r\n        <div>\r\n            <h1>Lets Add Pirate</h1>\r\n            <button onClick={()=> navigate(\"/pirates\")}>Crew Board</button>\r\n            <br/>\r\n            <br/>\r\n           \r\n            {errors.map((error, i) => (\r\n                  <p style={{color: 'red'}} key={i}>{error}</p>\r\n              ))}\r\n            <form onSubmit={submitHandler}>\r\n           \r\n             <label>Pirate Name:</label>\r\n               <input name=\"name\" type=\"text\" onChange={changeHandler}/> <br/>\r\n              \r\n               <label>Image url: </label>\r\n               <input name=\"imageUrl\" type=\"text\" onChange={changeHandler}/> <br/>\r\n              \r\n               <label># of Treasure Chests:</label>\r\n               <input name=\"treasures\" type=\"number\" onChange={changeHandler}/> <br/>\r\n              \r\n               <label>Pirate Catch Phrases: </label>\r\n               <input name=\"catchPhrase\" type=\"text\" onChange={changeHandler}/> <br/>\r\n\r\n               <label>Crew Position:</label>\r\n                {captain === \"no\"\r\n                ?\r\n                <select name=\"position\" onChange={changeHandler}>\r\n                <option>Captain</option> \r\n                <option>First Mate</option>\r\n                <option>Quarter master</option>\r\n                <option>Bootswain</option>\r\n                <option>Powder Monkey</option>\r\n                </select>\r\n                :\r\n                <select name=\"position\" onChange={changeHandler}>\r\n                   <option>First Mate</option>\r\n                   <option>Quarter master</option>\r\n                   <option>Bootswain</option>\r\n                   <option>Powder Monkey</option>\r\n                </select>   \r\n                 }\r\n\r\n                <br/>\r\n                <br/>\r\n                <input type=\"checkbox\"  name=\"pegLeg\"/>\r\n                <label> Peg leg</label><br/> \r\n                <input type=\"checkbox\"  name=\"eyePatch\"/>\r\n                <label> Eye Patch</label><br/> \r\n                <input type=\"checkbox\"  name=\"hookHand\"/>\r\n                <label> Hook Hand</label><br/> \r\n                <br/>            \r\n               <button type=\"submit\">Add Pirate</button>\r\n            </form>\r\n        \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPirate;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nexport default function Registrationform(){\r\n    const [formState, setFormState] = useState({\r\n        firstName: '',\r\n        lastName : '',\r\n        email: '',\r\n        password : '',\r\n        confirmPassword : ''\r\n    });\r\n    const [errors, setErrors] = useState(0);\r\n    const [frontendErrors, setFrontendErrors] = useState({\r\n        firstName : '',\r\n        lastName : '',\r\n        email : '',\r\n        password: '',\r\n        passwordMatch : ''\r\n    });\r\n\r\n    function handleChange(event){\r\n        const {name, value} = event.target;\r\n\r\n        setFormState({\r\n            ...formState,\r\n            [name] : value\r\n        });\r\n        \r\n        if(name === \"firstName\" && value.length  < 2){\r\n            setFrontendErrors({\r\n                ...frontendErrors,\r\n              firstName: 'First Name must be greater than 2 characters'})\r\n        }\r\n        if(name === \"lastName\" && value.length < 2){\r\n            setFrontendErrors({\r\n                ...frontendErrors,\r\n              lastName: 'Last Name must be greater than 2 characters'})}\r\n       \r\n        if(name === \"email\" && value.length < 2){\r\n            setFrontendErrors({\r\n                ...frontendErrors,\r\n              email: 'Email must be greater than 2 characters'})}\r\n        \r\n        if(name === \"password\" && value.length < 5){\r\n            setFrontendErrors({\r\n                ...frontendErrors,\r\n              password: 'Password must be greater than 5 characters'})\r\n            }\r\n        \r\n        if(name === \"confirmPassword\" && formState.password !== value){\r\n            setFrontendErrors({\r\n                ...frontendErrors,\r\n              passwordMatch: 'Password and password confirmation should match '})\r\n            }\r\n       \r\n    };\r\n\r\n    \r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        setErrors(0);\r\n        axios.post(\"http://localhost:8000/api/users/register\", \r\n                    formState,\r\n                    { withCredentials :true })\r\n            .then(()=> navigate(\"/pirates\"))\r\n            .catch(err => {\r\n                const newError = [];\r\n                console.log(err.response);\r\n                const innerErrors = err.response.data.errors;\r\n                for(const key of Object.keys(innerErrors)){\r\n                    newError.push(innerErrors[key].message);\r\n                }\r\n                setErrors(newError);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <>\r\n           \r\n            <form onSubmit={handleSubmit}>\r\n            {errors!== 0 && errors.map((error, index)=>\r\n                    <p style={{color:'red'}}key={index}>{error}</p>\r\n                )}\r\n                <p>\r\n                   <p> {frontendErrors.firstName}</p>\r\n                   <label>First Name:</label> \r\n                   <input \r\n                   name=\"firstName\"\r\n                   value={formState.firstName}\r\n                   onChange={handleChange}\r\n                   />\r\n                </p>\r\n                <p>\r\n                <p> {frontendErrors.lastName}</p>\r\n                   <label>Last Name:</label> \r\n                   <input \r\n                   name=\"lastName\"\r\n                   value={formState.lastName}\r\n                   onChange={handleChange}\r\n                   />\r\n                </p>\r\n                <p>\r\n                <p> {frontendErrors.email}</p>\r\n                   <label >Email:</label> \r\n                   <input \r\n                   name=\"email\"\r\n                   value={formState.email}\r\n                   onChange={handleChange}\r\n                   />\r\n                </p>\r\n                <p>\r\n                <p> {frontendErrors.password}</p>\r\n                   <label>Password</label> \r\n                   <input \r\n                   name=\"password\"\r\n                   type=\"password\"\r\n                   value={formState.password}\r\n                   onChange={handleChange}\r\n                   />\r\n                </p>\r\n                <p>\r\n                   <label>Confirm password</label> \r\n                   <input \r\n                   name=\"confirmPassword\"\r\n                   type=\"password\"\r\n                   value={formState.confirmPassword}\r\n                   onChange={handleChange}\r\n                   />\r\n                </p>\r\n                <button>Register</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate } from '@reach/router';\r\nimport RegistrationForm from './RegistrationForm';\r\n\r\nexport default function Login(){\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        setError('');\r\n        axios.post(\"http://localhost:8000/api/users/login\",{\r\n            email,\r\n            password\r\n        },  { withCredentials :true })\r\n            .then(()=> navigate('/pirates'))\r\n            .catch(() => setError(\"Please enter valid email or password\")\r\n            )\r\n    }\r\n\r\n    return (\r\n        <> \r\n            <h1>Login</h1>\r\n            {error && (\r\n                <p style={{color: \"red\"}}> {error} </p>\r\n            ) }\r\n            <form onSubmit = {handleSubmit}>\r\n                <p>\r\n                    <label>Email:</label>\r\n                    <input name=\"email\"\r\n                    value={email} \r\n                    onChange ={ e=> setEmail(e.target.value)}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <label>Password:</label>\r\n                    <input \r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value ={password}\r\n                    onChange = {e => setPassword(e.target.value)}\r\n                    />\r\n                </p>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n\r\n            <div>\r\n                <h1>Register!</h1>\r\n                <RegistrationForm/>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport './App.css';\nimport {Router} from '@reach/router';\nimport PirateCrew from './views/PirateCrew';\nimport ShowPirate from './views/ShowPirate';\nimport AddPirate from './views/AddPirate';\nimport Login from './views/Login';\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <Router>\n          <Login path=\"/\"/>\n          <PirateCrew path=\"pirates\"/>\n          <ShowPirate path=\"pirate/:id\"/>\n          <AddPirate path=\"pirate/new\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}